# Generated by Django 5.0.1 on 2024-01-17 14:32

import core.utils
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1024, verbose_name='Описание')),
                ('slug', models.SlugField(help_text='Укажите адрес страницы. Используйте только латиницу, цифры, дефисы и знаки подчёркивания', max_length=100, unique=True, verbose_name='Адрес (slug)')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1024, verbose_name='Описание')),
                ('slug', models.SlugField(help_text='Укажите адрес страницы. Используйте только латиницу, цифры, дефисы и знаки подчёркивания', max_length=100, unique=True, verbose_name='Адрес (slug)')),
                ('order_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Порядковый номер')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Наименование')),
                ('cover', models.ImageField(unique=True, upload_to=core.utils.get_cover_path, verbose_name='Обложка')),
                ('hover_cover', models.ImageField(unique=True, upload_to=core.utils.get_hover_path, verbose_name='Наведение на обложку')),
                ('min_players', models.PositiveSmallIntegerField(verbose_name='Минимальное количество игроков')),
                ('max_players', models.PositiveSmallIntegerField(verbose_name='Максимальное количество игроков')),
                ('time', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(limit_value=24, message='Количество часов должно быть меньше или равно 24')], verbose_name='Количество игровых часов')),
                ('age_restriction', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(limit_value=18, message='Возрастные ограничения могут быть от 0+ до 18+.')], verbose_name='Возрастные ограничения')),
                ('price', models.DecimalField(decimal_places=0, max_digits=7, verbose_name='Цена')),
                ('discount', models.DecimalField(decimal_places=0, max_digits=5, verbose_name='Скидка (%)')),
                ('final_price', models.DecimalField(blank=True, decimal_places=0, editable=False, max_digits=7, null=True, verbose_name='Окончательная цена')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='games.genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Игры',
                'ordering': ('order_number',),
            },
        ),
        migrations.CreateModel(
            name='AdminGameFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Порядковый номер')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('file', models.FileField(unique=True, upload_to=core.utils.get_file_path, verbose_name='Файл')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_files', to='games.game', verbose_name='Игра')),
            ],
            options={
                'verbose_name': 'Файл игры для администратора',
                'verbose_name_plural': 'Файлы игр для администратора',
                'ordering': ('game', 'order_number'),
                'unique_together': {('game', 'name')},
            },
        ),
        migrations.CreateModel(
            name='UserGameFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Порядковый номер')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('file', models.FileField(unique=True, upload_to=core.utils.get_file_path, verbose_name='Файл')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_files', to='games.game', verbose_name='Игра')),
            ],
            options={
                'verbose_name': 'Файл игры для пользователя',
                'verbose_name_plural': 'Файлы игр для пользователя',
                'ordering': ('game', 'order_number'),
                'unique_together': {('game', 'name')},
            },
        ),
    ]
